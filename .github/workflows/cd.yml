name: CD

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Many color libraries just need this to be set to any value, but at least
  # one distinguishes color depth, where "3" -> "256-bit color".
  FORCE_COLOR: 3

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux-intel
            runs-on: ubuntu-latest
          - os: windows-intel
            runs-on: windows-latest
          - os: macos-intel
            # macos-13 was the last x86_64 runner
            runs-on: macos-13
          - os: macos-14-arm
            runs-on: macos-14
          - os: macos-15-arm
            runs-on: macos-15
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true
      - uses: prefix-dev/setup-pixi@v0.9.0
        with:
          pixi-version: v0.49.0
          cache: true

      - name: Build wheels
        run: pixi run -e build-py313t build-wheel-and-test
      - name: Auditwheel repair (Linux only)
        if: matrix.os == 'linux-intel'
        run: |
          for whl in wheelhouse/*.whl; do
            pixi run -e build-py313t auditwheel repair "$whl" --plat manylinux_2_28_x86_64 -w wheelhouse/
          done
          # List the repaired wheels
          ls -lh wheelhouse/
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: prefix-dev/setup-pixi@v0.9.0
        with:
          pixi-version: v0.49.0
          cache: true

      - name: Build sdist
        # This is a separate job to avoid the need for a matrix strategy.
        run: pixi run -e build-py313t build-sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  testpublish:
    needs: [build_wheels, build_sdist]
    name: Publish to Test PyPI
    environment: testpypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/download-artifact@v5
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: List contents of built dist
        run: |
          ls -ltrh
          ls -ltrh dist

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true

  publish:
    needs: [build_wheels, build_sdist]
    name: Publish to PyPI
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v5
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
