#                             VVVVVV  minimum `pixi` version
"$schema" = "https://pixi.sh/v0.49.0/schema/manifest/schema.json"

[workspace]
requires-pixi = ">=0.49,<1.0"
authors = ["Don Setiawan", "Ayush Nag", "Madeline Gordon", "Hartmut Kaiser"]
channels = ["conda-forge"]
description = "Python Binding for HPX C++ library"
name = "hpyx"
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]
version = "0.1.0"

# Target specific dependencies
[target.unix.dependencies]
gperftools = ">=2.10,<3"

[target.unix.tasks]
fix-lib-paths = { cmd = "scripts/fix_lib_paths.sh", description = "Fix library paths for Unix systems" }

[target.win.dependencies]
mimalloc = ">=3.0.1,<4"

[tasks]
get-python-version = "python --version"
install-all = { depends-on = ["pip-install-all"] }
install = { depends-on = ["pip-install"] }
uninstall = "pip uninstall -y hpyx"
pip-install = 'pip install --force-reinstall --verbose -e "."'
pip-install-all = 'pip install --force-reinstall --verbose -e ".[all]"'
lint = { depends-on = [{ "task" = "linter", environment = "linting" }] }

[tasks.benchmark]
args = [{ "arg" = "keyword_expression", "default" = "" }]
cmd = [
    "pytest",
    "./benchmarks",
    "-k",
    "'{{keyword_expression}}'",
    "--benchmark-group-by=func",
    "--benchmark-warmup=on",
    "--benchmark-min-rounds=3",
    "--benchmark-time-unit=ms",
]

[tasks.test]
cmd = ["pytest", "--tb=short", "--disable-warnings", "-v"]
depends-on = ["build-hpx-stable", "install"]

[tasks.build-sdist]
cmd = ["uv", "build", "--sdist", "dist/"]
depends-on = ["build-hpx-stable"]

[tasks.build-wheel]
cmd = "cibuildwheel --output-dir wheelhouse"
depends-on = ["build-hpx-stable"]

[dependencies]
cmake = ">=3.15,<3.29"
cxx-compiler = ">=1.8.0,<2"
make = ">=4.4.1,<5"
clang = ">=17.0.6,<18"
nanobind = ">=2.7.0,<3"
libboost-headers = ">=1.86.0,<2"
threadpoolctl = ">=3.6.0,<4"
pytest-benchmark = ">=5.1.0,<6"

[host-dependencies]
asio = ">=1.29.0,<2"

[environments]
py313t = ["test", "python", "py313t", "hpx-src"]
py313 = ["test", "python", "py313", "hpx-src"]
build313t = ["build", "python", "py313t", "hpx-src"]
docs = ["mkdocs", "python", "py313", "hpx-conda"]
linting = ["lint", "py313"]

# Latest HPX Dependencies
# The following configuration is for the latest HPX version,
# which is not yet available in conda-forge.
[feature.hpx-src.host-dependencies]
ninja = ">=1.13.0,<2"
libhwloc = ">=2.11.2,<3"
libboost-devel = ">=1.86.0,<2"

[feature.hpx-src.tasks.fetch-hpx-source]
cmd = "git submodule update --init"

# Set the default HPX version to the latest release candidate
[feature.hpx-src.tasks.build-hpx-latest]
depends-on = [{ "task" = "build-hpx", "args" = ["v1.11.0-rc1"] }]
[feature.hpx-src.tasks.build-hpx-stable]
depends-on = [{ "task" = "build-hpx", "args" = ["v1.11.0"] }]

[feature.hpx-src.tasks.restore-submodule]
cmd = "git restore vendor/hpx"

[feature.hpx-src.tasks.build-hpx]
args = [
    { "arg" = "tag", "default" = "v1.11.0-rc1" },
    { "arg" = "malloc", "default" = "system" },
    { "arg" = "build_dir", "default" = "build" },
]
cmd = [
    "../../scripts/build.sh",
    "--malloc",
    "{{ malloc }}",
    "--build-dir",
    "{{ build_dir }}",
    "--hpx-version",
    "{{ tag }}",
]
cwd = "vendor/hpx"
depends-on = ["fetch-hpx-source"]

[feature.hpx-src.tasks]
install-all = { depends-on = ["build-hpx-stable", "pip-install-all"] }
install = { depends-on = ["build-hpx-stable", "pip-install"] }
install-all-latest = { depends-on = [
    "build-hpx-latest",
    "pip-install-all",
    "restore-submodule",
] }
install-latest = { depends-on = [
    "build-hpx-latest",
    "pip-install",
    "restore-submodule",
] }

# Conda stable hpx dependencies
# Commented out as they are not used in the current configuration.
[feature.hpx-conda.dependencies]
hpx = ">=1.11.0,<2"

# Python Package Dependencies
[feature.python.dependencies]
pip = ">=25.0.1,<26"

# Python Versions Dependencies
[feature.py313t.dependencies]
python-freethreading = ">=3.13,<4"

[feature.py313.dependencies]
python = ">=3.13,<4"

# Build Dependencies
[feature.build.pypi-dependencies]
build = ">=1.2.2.post1, <2"
cibuildwheel = ">=3.0.1, <4"

[feature.build.dependencies]
scikit-build-core = "*"
uv = ">=0.6.17,<0.7"


[feature.test.dependencies]
pytest = ">=8.3.5,<9"

[feature.mkdocs.dependencies]
mkdocs-material = "*"
mkdocstrings = "*"
mkdocstrings-python = "*"
pymdown-extensions = ">=10.16,<11"
ruff = ">=0.12.8,<0.13"

[feature.mkdocs.pypi-dependencies]
mkdocs-jupyter = ">=0.25.1,<1"
mkdocs-llmstxt = ">=0.2.0,<1"
mkdocs-awesome-nav = ">=3.1.2,<4"
mike = ">=2.1.3,<3"
markdown-exec = ">=1.11.0, <2"
griffe = "*"

[feature.mkdocs.tasks]
start = { cmd = "mkdocs serve", depends-on = ["install"] }

[feature.mkdocs.tasks.rtd-publish]
depends-on = ["install"]
cmd = "./scripts/rtd-publish.sh"
env = { JUPYTER_PLATFORM_DIRS = "1" }

# Linting Related Configuration
[feature.lint.dependencies]
pre-commit = ">=4.2.0,<5"
identify = ">=2.6.12,<3"

[feature.lint.tasks.linter]
cmd = ["pre-commit", "run", "--all-files", "--show-diff-on-failure"]
depends-on = ["pre-commit-clean"]

[feature.lint.tasks.pre-commit-clean]
cmd = ["pre-commit", "clean"]
